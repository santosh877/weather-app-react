{"ast":null,"code":"var _jsxFileName = \"/home/santosh-deepika/Documents/weather-app-tiiny-host/weather-app-react/src/_context/currentWeatherContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { LocationContext } from './locationContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CurrentWeatherContext = /*#__PURE__*/createContext();\nconst CurrentWeatherContextProvider = props => {\n  _s();\n  const locationContext = useContext(LocationContext);\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [selectedDayWeather, setSelectedDayWeather] = useState(null);\n  useEffect(() => {\n    const location = locationContext.location;\n    if (location) {\n      let {\n        lat,\n        lon\n      } = location.position;\n      lat = lat ? lat : \"28.541100\";\n      lon = lon ? lon : \"77.281677\";\n      const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=e20f7d114a11a2d3a537edb503a94d4a`;\n      axios.get(url).then(function (res) {\n        var _res$data;\n        let dailyData = res.data.daily.slice(0, 7);\n        console.log(\"result123\", dailyData);\n        setSelectedDayWeather(dailyData[0]);\n        setCurrentWeather({\n          hourlyData: res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.hourly,\n          dailyData: dailyData\n        });\n      }).catch(function (error) {\n        // console.log(error);\n      });\n    }\n  }, [locationContext.location]);\n  return /*#__PURE__*/_jsxDEV(CurrentWeatherContext.Provider, {\n    value: {\n      currentWeather,\n      setCurrentWeather,\n      selectedDayWeather,\n      setSelectedDayWeather\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(CurrentWeatherContextProvider, \"PEWTG+sflDsG+s3Jn874twR6KJc=\");\n_c = CurrentWeatherContextProvider;\nexport default CurrentWeatherContextProvider;\nvar _c;\n$RefreshReg$(_c, \"CurrentWeatherContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","LocationContext","axios","jsxDEV","_jsxDEV","CurrentWeatherContext","CurrentWeatherContextProvider","props","_s","locationContext","currentWeather","setCurrentWeather","selectedDayWeather","setSelectedDayWeather","location","lat","lon","position","url","get","then","res","_res$data","dailyData","data","daily","slice","console","log","hourlyData","hourly","catch","error","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/santosh-deepika/Documents/weather-app-tiiny-host/weather-app-react/src/_context/currentWeatherContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { LocationContext } from './locationContext';\nimport axios from 'axios'\n\nexport const CurrentWeatherContext = createContext();\n\nconst CurrentWeatherContextProvider = (props) => {\n\n    const locationContext = useContext(LocationContext);\n    const [currentWeather, setCurrentWeather] = useState(null);\n    const [selectedDayWeather, setSelectedDayWeather] = useState(null);\n\n    useEffect(() => {\n        const location = locationContext.location;\n        if (location) {\n            let { lat, lon } = location.position\n            lat = lat ? lat : \"28.541100\";\n            lon = lon ? lon : \"77.281677\";\n\n            const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=e20f7d114a11a2d3a537edb503a94d4a`\n\n            axios.get(url)\n                .then(function (res) {\n                    let dailyData = res.data.daily.slice(0, 7);\n                    console.log(\"result123\", dailyData)\n                    setSelectedDayWeather(dailyData[0])\n                    setCurrentWeather({\n                        hourlyData: res?.data?.hourly,\n                        dailyData: dailyData\n                    })\n                })\n                .catch(function (error) {\n                   // console.log(error);\n                })\n        }\n    }, [locationContext.location]);\n\n    return (\n        <CurrentWeatherContext.Provider\n            value={{ currentWeather, setCurrentWeather, selectedDayWeather, setSelectedDayWeather }}>\n            {props.children}\n        </CurrentWeatherContext.Provider>\n    );\n}\n\n\nexport default CurrentWeatherContextProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,eAAe,QAAQ,mBAAmB;AACnD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,OAAO,MAAMC,qBAAqB,gBAAGR,aAAa,CAAC,CAAC;AAEpD,MAAMS,6BAA6B,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE7C,MAAMC,eAAe,GAAGT,UAAU,CAACC,eAAe,CAAC;EACnD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACc,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAElEC,SAAS,CAAC,MAAM;IACZ,MAAMe,QAAQ,GAAGL,eAAe,CAACK,QAAQ;IACzC,IAAIA,QAAQ,EAAE;MACV,IAAI;QAAEC,GAAG;QAAEC;MAAI,CAAC,GAAGF,QAAQ,CAACG,QAAQ;MACpCF,GAAG,GAAGA,GAAG,GAAGA,GAAG,GAAG,WAAW;MAC7BC,GAAG,GAAGA,GAAG,GAAGA,GAAG,GAAG,WAAW;MAE7B,MAAME,GAAG,GAAI,uDAAsDH,GAAI,QAAOC,GAAI,yCAAwC;MAE1Hd,KAAK,CAACiB,GAAG,CAACD,GAAG,CAAC,CACTE,IAAI,CAAC,UAAUC,GAAG,EAAE;QAAA,IAAAC,SAAA;QACjB,IAAIC,SAAS,GAAGF,GAAG,CAACG,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1CC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEL,SAAS,CAAC;QACnCV,qBAAqB,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC;QACnCZ,iBAAiB,CAAC;UACdkB,UAAU,EAAER,GAAG,aAAHA,GAAG,wBAAAC,SAAA,GAAHD,GAAG,CAAEG,IAAI,cAAAF,SAAA,uBAATA,SAAA,CAAWQ,MAAM;UAC7BP,SAAS,EAAEA;QACf,CAAC,CAAC;MACN,CAAC,CAAC,CACDQ,KAAK,CAAC,UAAUC,KAAK,EAAE;QACrB;MAAA,CACF,CAAC;IACV;EACJ,CAAC,EAAE,CAACvB,eAAe,CAACK,QAAQ,CAAC,CAAC;EAE9B,oBACIV,OAAA,CAACC,qBAAqB,CAAC4B,QAAQ;IAC3BC,KAAK,EAAE;MAAExB,cAAc;MAAEC,iBAAiB;MAAEC,kBAAkB;MAAEC;IAAsB,CAAE;IAAAsB,QAAA,EACvF5B,KAAK,CAAC4B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEzC,CAAC;AAAA/B,EAAA,CArCKF,6BAA6B;AAAAkC,EAAA,GAA7BlC,6BAA6B;AAwCnC,eAAeA,6BAA6B;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}